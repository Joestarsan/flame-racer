@tailwind base;
@tailwind components;
@tailwind utilities;

/* Flame Racer Design System - All colors MUST be HSL */

@layer base {
  :root {
    /* Flame Colors */
    --background: 220 25% 8%;
    --background-secondary: 218 28% 6%;
    --foreground: 35 15% 95%;
    
    /* Fire Palette */
    --flame-core: 25 100% 65%;      /* Bright orange-yellow */
    --flame-hot: 15 100% 60%;       /* Hot orange */
    --flame-warm: 5 95% 55%;        /* Red-orange */
    --flame-ember: 45 100% 70%;     /* Golden yellow */
    --flame-spark: 50 100% 85%;     /* Bright gold */
    
    /* Game UI */
    --primary: 25 100% 65%;
    --primary-foreground: 220 25% 8%;
    --secondary: 220 20% 15%;
    --secondary-foreground: 35 15% 95%;
    --accent: 45 100% 70%;
    --accent-foreground: 220 25% 8%;
    
    /* Status Colors */
    --danger: 0 85% 60%;
    --danger-foreground: 35 15% 95%;
    --success: 45 100% 70%;
    --success-foreground: 220 25% 8%;
    
    /* Surface Colors */
    --card: 220 20% 12%;
    --card-foreground: 35 15% 95%;
    --border: 220 15% 20%;
    --muted: 220 15% 18%;
    --muted-foreground: 35 8% 70%;
    
    /* Gradients */
    --gradient-flame: linear-gradient(135deg, hsl(var(--flame-ember)), hsl(var(--flame-core)), hsl(var(--flame-hot)));
    --gradient-fire: linear-gradient(180deg, hsl(var(--flame-core)), hsl(var(--flame-warm)));
    --gradient-ember: radial-gradient(circle at 40% 40%, hsl(var(--flame-spark)), hsl(var(--flame-ember)) 55%, transparent 70%);
    --gradient-background: radial-gradient(1200px 800px at 70% -10%, hsl(var(--flame-core) / 0.15), transparent 60%), 
                          linear-gradient(hsl(var(--background)), hsl(var(--background-secondary)));
    
    /* Shadows & Glows */
    --shadow-flame: 0 0 20px hsl(var(--flame-core) / 0.6), 0 0 40px hsl(var(--flame-hot) / 0.4);
    --shadow-ember: 0 0 16px hsl(var(--flame-ember) / 0.8), 0 0 28px hsl(var(--flame-ember) / 0.5);
    --shadow-game: 0 22px 60px hsl(220 25% 2% / 0.8), inset 0 0 0 1px hsl(35 15% 95% / 0.05);
    
    /* Animations */
    --transition-flame: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    --animation-glow: glow 0.9s ease-in-out infinite alternate;
    --animation-flicker: flicker 1.5s ease-in-out infinite alternate;
    
    --radius: 0.75rem;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  
  body {
    background: var(--gradient-background);
    color: hsl(var(--foreground));
    font-family: system-ui, -apple-system, 'Segoe UI', Roboto, Inter, Ubuntu, Cantarell, 'Helvetica Neue', Arial;
  }
}

@layer utilities {
  /* Flame Animations */
  @keyframes glow {
    from { 
      filter: drop-shadow(0 0 6px hsl(var(--flame-core) / 0.6)) 
              drop-shadow(0 0 14px hsl(var(--flame-hot) / 0.3)); 
    }
    to { 
      filter: drop-shadow(0 0 12px hsl(var(--flame-core) / 0.9)) 
              drop-shadow(0 0 26px hsl(var(--flame-hot) / 0.5)); 
    }
  }
  
  @keyframes flicker {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.8; }
  }
  
  @keyframes ember-rise {
    0% { 
      transform: translate3d(var(--x, 0px), 0, 0) scale(var(--s, 1)); 
      opacity: 0; 
    }
    10% { opacity: 0.95; }
    100% { 
      transform: translate3d(var(--xEnd, 0px), -110%, 0) scale(var(--s, 1)); 
      opacity: 0; 
    }
  }
  
  @keyframes pulse-flame {
    0%, 100% { 
      box-shadow: var(--shadow-flame);
      transform: scale(1);
    }
    50% { 
      box-shadow: 0 0 30px hsl(var(--flame-core) / 0.8), 0 0 60px hsl(var(--flame-hot) / 0.6);
      transform: scale(1.02);
    }
  }
  
  /* Utility Classes */
  .flame-text {
    background: var(--gradient-flame);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 200% 200%;
    animation: var(--animation-flicker);
  }
  
  .ember-glow {
    animation: var(--animation-glow);
  }
  
  .flame-border {
    border: 1px solid hsl(var(--flame-core) / 0.3);
    box-shadow: 0 0 0 1px hsl(var(--flame-core) / 0.1) inset;
  }
  
  .fire-gradient {
    background: var(--gradient-fire);
  }
  
  .ember-gradient {
    background: var(--gradient-ember);
  }
  
  .game-surface {
    background: linear-gradient(180deg, hsl(var(--card) / 0.9), hsl(var(--background-secondary) / 0.9));
    border: 1px solid hsl(var(--flame-core) / 0.2);
    box-shadow: var(--shadow-game);
    backdrop-filter: blur(8px) saturate(1.1);
  }
  
  .stripe-effect {
    background: linear-gradient(90deg, transparent, hsl(35 15% 95% / 0.1), transparent);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }
}